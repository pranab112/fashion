[pytest]
DJANGO_SETTINGS_MODULE = nexus.settings
python_files = tests.py test_*.py *_tests.py
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --no-cov-on-fail
    -v
    --reuse-db

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    e2e: marks tests as end-to-end tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    views: marks tests as view tests
    models: marks tests as model tests
    forms: marks tests as form tests
    utils: marks tests as utility function tests
    serializers: marks tests as serializer tests
    permissions: marks tests as permission tests
    filters: marks tests as filter tests
    signals: marks tests as signal tests
    tasks: marks tests as task tests
    commands: marks tests as management command tests
    middleware: marks tests as middleware tests
    templatetags: marks tests as template tag tests
    cache: marks tests as cache-related tests
    search: marks tests as search-related tests
    email: marks tests as email-related tests
    auth: marks tests as authentication-related tests
    admin: marks tests as admin-related tests

python_classes = Test Acceptance
python_functions = test_* should_*

filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning

env =
    DJANGO_SETTINGS_MODULE=nexus.settings
    PYTHONPATH=.
    DJANGO_CONFIGURATION=Test
    DEBUG=False
    TESTING=True

testpaths =
    tests
    integration_tests
    core/tests
    products/tests
    cart/tests
    users/tests

norecursedirs =
    .git
    .tox
    .env
    dist
    build
    migrations
    node_modules

# Configure test database
django_db_engine = django.db.backends.sqlite3
django_db_name = :memory:

# Configure logging during tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configure test coverage
[coverage:run]
branch = True
source = .
omit =
    */tests/*
    */migrations/*
    manage.py
    nexus/wsgi.py
    nexus/asgi.py
    nexus/settings/*
    */apps.py
    */admin.py
    */urls.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    @abstractmethod
    @abc.abstractmethod
    class .*\bProtocol\):
    class .*\bInterface\):

ignore_errors = True
fail_under = 80
show_missing = True
skip_covered = True

# Configure test database creation/destruction
[tool:pytest]
django_debug_mode = False
django_find_project = False
