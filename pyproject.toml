[build-system]
requires = ["setuptools>=45", "wheel", "pip>=21"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = ["docs", "migrations"]
known_django = ["django"]
known_first_party = ["nexus", "core", "products", "cart", "users"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = ["*.migrations.*", "*.tests.*"]
ignore_errors = true

[tool.django-stubs]
django_settings_module = "nexus.settings"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "nexus.settings"
python_files = ["test_*.py", "*_test.py", "tests.py"]
addopts = """
    --strict-markers
    --strict-config
    --tb=short
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --no-cov-on-fail
"""
testpaths = ["tests"]
python_classes = ["Test", "Acceptance"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration (deselect with '-m \"not integration\"')",
    "e2e: marks tests as end-to-end (deselect with '-m \"not e2e\"')",
]

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "manage.py",
    "nexus/wsgi.py",
    "nexus/asgi.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
fail_under = 80

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[tool.pylint.MASTER]
ignore = ["migrations", "tests"]
load-plugins = [
    "pylint_django",
]
django-settings-module = "nexus.settings"

[tool.pylint.FORMAT]
max-line-length = 100

[tool.pylint.MESSAGES_CONTROL]
disable = [
    "missing-docstring",
    "invalid-name",
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]

[tool.flake8]
max-line-length = 100
exclude = ["migrations", "tests"]
ignore = ["E203", "W503"]
max-complexity = 10

[tool.semantic_release]
version_variable = [
    "nexus/__init__.py:__version__",
    "pyproject.toml:version",
]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "python setup.py sdist bdist_wheel"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311
isolated_build = True

[testenv]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-local.txt
commands =
    pytest {posargs:tests}
"""

[tool.poetry]
name = "nexus"
version = "0.1.0"
description = "A modern e-commerce platform built with Django"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
Django = "^4.2"
djangorestframework = "^3.14"
celery = "^5.3"
redis = "^5.0"
psycopg2-binary = "^2.9"
Pillow = "^10.0"
stripe = "^5.4"

[tool.poetry.dev-dependencies]
pytest = "^7.3"
pytest-django = "^4.5"
pytest-cov = "^4.0"
black = "^23.3"
isort = "^5.12"
mypy = "^1.3"
flake8 = "^6.0"
tox = "^4.5"
