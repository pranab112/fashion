version: '3.8'

services:
  web:
    build: .
    command: gunicorn nexus.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 4
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - elasticsearch
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-nexus}
      - POSTGRES_USER=${DB_USER:-nexus}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-nexuspassword}
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-nexus}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  celery:
    build: .
    command: celery -A nexus worker -l INFO
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD", "celery", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery-beat:
    build: .
    command: celery -A nexus beat -l INFO
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - nexus_network

  elasticsearch:
    image: elasticsearch:7.17.9
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  static_volume:
  media_volume:

networks:
  nexus_network:
    driver: bridge

# Development overrides
x-development:
  services:
    web:
      command: python manage.py runserver 0.0.0.0:8000
      ports:
        - "8000:8000"
      volumes:
        - .:/app
      environment:
        - DEBUG=1
    
    nginx:
      profiles:
        - production

    elasticsearch:
      profiles:
        - production
